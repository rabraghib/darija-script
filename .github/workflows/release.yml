name: ðŸš€ Build & Release
on:
  workflow_dispatch:
  push:
    branches:
      - main
jobs:
  release-up:
    runs-on: ubuntu-20.04
    outputs:
      tag: ${{ steps.releaser.outputs.tag }}
      version: ${{ steps.releaser.outputs.version }}
      released: ${{ steps.releaser.outputs.released }}
      release_notes: ${{ steps.releaser.outputs.release_notes }}
    steps:
      - uses: actions/checkout@v2
      - uses: rabraghib/releaser-action@v1
        id: releaser
        with:
          output-file: CHANGELOG.md
          version-file: language-service/package.json
          bump-files: |
            language-service/package.json
  build-deploy:
    if: needs.release-up.outputs.released == 'true'
    needs: release-up
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'main'
      - uses: actions/setup-node@v4
        with:
          node-version: 18.x
      - uses: actions/setup-go@v5
        with:
          go-version: 1.20.7
      - name: Build for Windows, Linux, and macOS
        run: |
          GOOS=linux GOARCH=amd64 go build -buildvcs=false -o bin/darijascript-bin-${{ needs.release-up.outputs.tag }}-linux .
          cp bin/darijascript-bin-${{ needs.release-up.outputs.tag }}-linux bin/darijascript-bin
          GOOS=windows GOARCH=amd64 go build -buildvcs=false -o bin/darijascript-bin-${{ needs.release-up.outputs.tag }}-windows.exe .
          GOOS=darwin GOARCH=amd64 go build -buildvcs=false -o bin/darijascript-bin-${{ needs.release-up.outputs.tag }}-macos .
          GOOS=js GOARCH=wasm go build -buildvcs=false -o website/public/darijascript-bin-web.wasm .
      - uses: actions/upload-artifact@v4
        with:
          name: wasm-build
          path: website/public/darijascript-bin-web.wasm
      - name: Build vscode extension
        run: |
          npm install -g @vscode/vsce
          cd language-service
          vsce package ${{ needs.release-up.outputs.version }} -o ../bin/darijascript-vscode-extension-${{ needs.release-up.outputs.tag }}.vsix
      - name: Archive vscode extension
        uses: actions/upload-artifact@v4
        with:
          name: darijascript-vscode-extension
          path: language-service/*.vsix
      - uses: softprops/action-gh-release@v1
        with:
          name: 'DarijaScript ${{ needs.release-up.outputs.tag }}'
          tag_name: ${{ needs.release-up.outputs.tag }}
          body: ${{ needs.release-up.outputs.release_notes }}
          files: |
            bin/*
  deploy-website:
    if: needs.release-up.outputs.released == 'true'
    needs: [release-up, build-deploy]
    runs-on: ubuntu-20.04
    env:
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - uses: actions/download-artifact@v4
        with:
          name: wasm-build
          path: website/public/temp

      - name: Copy wasm build to website/public
        run: mv website/public/temp/darijascript-bin-web.wasm website/public/darijascript-bin-web.wasm

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
